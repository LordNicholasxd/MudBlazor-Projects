@page "/"
@using MudBlazor
@inject NavigationManager Navigation
<PageTitle>Home</PageTitle>


<MudDialogProvider />
<div class="fundoImagem"></div>
<style>
  .fundoImagem {
    position: fixed; /* Fica fixo na tela */
    top: 0;
    left: 50%;
    width: 100%;
    height: 100%;
    background: url('Imagens/Svgs/SchefferIcone.svg') no-repeat left center;
    /* background-size: cover; */
    background-size: 60% auto;
    opacity: 0.1; /* Ajuste a opacidade conforme necessário */
    z-index: -1; /* Garante que a imagem está atrás do conteúdo */
  }
  
}
</style>
    
<div class="conteudo">
  @foreach (var funcionariosAgrupados in setoresAgrupados)
  {
    <MudCard Class="mud-card">
      <MudCardHeader Class="mud-card-header">
        <MudText Typo="Typo.h6" Class="mud-text-setor">@funcionariosAgrupados.Setor</MudText>
      </MudCardHeader>
      <MudCardContent Class="mud-card-content">
        @foreach (var funcionario in funcionariosAgrupados.FuncionariosAgrupados)
        {
          <MudText Typo="Typo.body2" Class="mud-text">
            <span class="mud-text-ramal">@funcionario.Ramal - </span>
            
            <span class="mud-text-funcionarios">@funcionario.Funcionarios</span>
          </MudText>
        }
      </MudCardContent>
    </MudCard>
  }
</div>





@* <MudTable Items="@funcionariosAgrupados.FuncionariosAgrupados">
      <RowTemplate>
        <MudTr>
          <MudTd>@context.Ramal</MudTd>
          <MudTd>@context.Funcionarios</MudTd>
        </MudTr>
      </RowTemplate>
    </MudTable> *@

@code {
  private List<Ramall> ramais = new List<Ramall>();
  private List<(string Setor, List<(string Ramal, string Funcionarios)> FuncionariosAgrupados)> setoresAgrupados = new List<(string Setor, List<(string Ramal, string Funcionarios)> FuncionariosAgrupados)>();

  protected override async Task OnInitializedAsync()
  {
    ramais = await _context.Ramais.ToListAsync();

    setoresAgrupados = ramais
        .GroupBy(r => r.Setor)
        .Select(setorGroup => (
            Setor: setorGroup.Key,
            FuncionariosAgrupados: setorGroup
                .GroupBy(r => r.NumeroRamall)
                .Select(ramalGroup => (
                    Ramal: ramalGroup.Key,
                    Funcionarios: string.Join(", ", ramalGroup.Select(f => f.Funcionarios))
                ))
                .ToList()
        ))
        .ToList();
  }
}
